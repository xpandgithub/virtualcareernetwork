<?php /*
The Virtual Career Network (VCN) is an "open source, open content" workforce services and online learning delivery platform built and operated by the American Association of Community Colleges (AACC) under a grant from the Employment and Training Administration (ETA) of the United States Department of Labor (DOL).

Copyright (C) 2012 American Association of Community Colleges

This file is part of the source code for the Virtual Career Network.

The Virtual Career Network is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

The Virtual Career Network is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see http://www.gnu.org/licenses/.
*/ ?>


<?php

/**
 * Implementation of hook_help()
 */
function vcnheader_help($path, $arg) {
  if ($path == 'admin/help#vcnheader') {
    return t('Header block for VCN.');
  }
}

/**
 * Implementation of hook_block_info()
 */
function vcnheader_block_info() {
  $blocks = array();
  $blocks['main'] = array(
    'info' => t('Main Header Block'),
  );
  $blocks['healthcare'] = array(
  		'info' => t('Healthcare Header Block'),
  );
  $blocks['igen'] = array(
  		'info' => t('IGEN Header Block'),
  );
  $blocks['transit'] = array(
  		'info' => t('Transit Header Block'),
  );
  $blocks['aarp'] = array(
  		'info' => t('AARP Header Block'),
  );
  $blocks['osp'] = array(
    'info' => t('OSP Header Block'),
  );
  $blocks['provider'] = array(
    'info' => t('Provider Portal Header Block'),
  );
  
  return $blocks;
}

/**
 * Implementation of hook_block_view()
 */
function vcnheader_block_view($delta='') {
  $block = array();

  switch($delta) {
     case 'main':
        $block['content'] = theme('vcnheader_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'healthcare':
        $block['content'] = theme('vcnheader_healthcare_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'igen':
        $block['content'] = theme('vcnheader_igen_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'transit':
        $block['content'] = theme('vcnheader_transit_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'aarp':
        $block['content'] = theme('vcnheader_aarp_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'osp':
        $block['content'] = theme('vcnheader_osp_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break;
     case 'provider':
        $block['content'] = theme('vcnheader_provider_block', array('welcome_message' => vcnheader_get_welcome_message()));
        break; 
  }

  return $block;
}

/**
 * Implementation of hook_theme()
 */
function vcnheader_theme() {
  $theme = array();
  
  $theme['vcnheader_block'] = array(
	 'variables' => array(
		'welcome_message' => NULL,
	  ),
	  'template' => 'vcnheader-block',
  	  'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_healthcare_block'] = array(
  		'variables' => array(
  				'welcome_message' => NULL,
  		),
  		'template' => 'vcnheader-healthcare-block',
  		'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_igen_block'] = array(
  	 'variables' => array(
  	 		'welcome_message' => NULL,
  	 ),
  		'template' => 'vcnheader-igen-block',
  		'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_transit_block'] = array(
  	 'variables' => array(
  	 		'welcome_message' => NULL,
  	 ),
  		'template' => 'vcnheader-transit-block',
  		'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_aarp_block'] = array(
  	 'variables' => array(
  	 		'welcome_message' => NULL,
  	 ),
  		'template' => 'vcnheader-aarp-block',
  		'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_osp_block'] = array(
	 'variables' => array(
		'welcome_message' => NULL,
	  ),
	  'template' => 'vcnheader-osp-block',
  	  'file' => 'includes/vcnheader.inc',
  );
  
  $theme['vcnheader_provider_block'] = array(
	 'variables' => array(
		'welcome_message' => NULL,
	  ),
	  'template' => 'vcnheader-provider-block',
  	  'file' => 'includes/vcnheader.inc',
  );
  
  return $theme;
}

/**
 * Implementation of hook_form_alter()
 */
function vcnheader_form_alter($form, &$form_state){

  // Change the size of the search box so that americanjobcenter logo on the header would 
  // be on the top middle and not mixed up with other logos
  
  if ($form['form_id']['#value'] == 'search_block_form') {
      $form['search_block_form']['#size'] = 7;
  }
  
  return $form;
}

/**
 * Custom function that gets the welcome message for the user which is displayed in the top right of the header
 */
function vcnheader_get_welcome_message() {
  $message = '';

  if (strlen($GLOBALS['d6_name'])) {
  	if ($GLOBALS['is_drupal_username']) {
  		$username = ucfirst($GLOBALS['d6_name']);
  	} else {
  		$username = ucfirst(vcn_custom_aes_decrypt($GLOBALS['d6_name']));
  	}
    $username = strlen($username) > 12 ? substr($username, 0, 9) . ' ...' : $username;
  	$message = 'Hi, <a href="' . vcn_drupal7_base_path(). 'cma/profile">' . $username  . '</a>';
  }
  
  return $message;
}

/**
 * Implementation of hook_preprocess_HOOK()
 */

function vcnheader_preprocess_vcnheader_block(&$variables) {
  
	//vcn_header_template_preprocess($variables);

	$subsite = vcn_determine_vcn_subsite();	
	$industry_code =  vcn_get_industry_code();	
				 
	if ($subsite=="provider") {
		$block = module_invoke('vcnheader', 'block_view', 'provider');		
	} else if ($subsite=="osp") {
		$block = module_invoke('vcnheader', 'block_view', 'osp');		
	} else {
		$block = module_invoke('vcnheader', 'block_view', $industry_code);
	}
	$variables['header_content'] = render($block['content']);
	
}

function vcnheader_preprocess_vcnheader_healthcare_block(&$variables) {

	vcn_header_template_preprocess($variables);
}

function vcnheader_preprocess_vcnheader_igen_block(&$variables) {

	vcn_header_template_preprocess($variables);
}

function vcnheader_preprocess_vcnheader_transit_block(&$variables) {

	vcn_header_template_preprocess($variables);
}

function vcnheader_preprocess_vcnheader_aarp_block(&$variables) {

	vcn_header_template_preprocess($variables);
}

/**
 * Implementation of hook_preprocess_HOOK()
 */

function vcnheader_preprocess_vcnheader_osp_block(&$variables) {

	$variables['vcn_base_path'] = base_path();
	 
	$variables['left_link_string'] = vcn_header_left_links('osp_main');
	
	$variables['headerlinksfront'] = 'vcn-header-links-front';
	if (stristr($_SERVER['REQUEST_URI'], 'welcome')) {
		$variables['headerlinksfront'] = 'vcn-header-links-front-dark';
	}
	$variables['headerlinksend'] = 'vcn-header-links-end';	 
	
	// prepare search box
	$searchblock = module_invoke('search', 'block_view');
	$searchbox = $searchblock['content'];
	$variables['searchbox'] = str_replace('<div class="container-inline">','<div class="container-inline" style="height:20px;">',$searchbox);
	
	
	// get the VCN's app properties
	$vcnAppProperties = new vcnAppProperties();
	$variables['current_drupal_version'] = $vcnAppProperties->getCurrentDrupalVersion();
	$variables['current_moodle_version'] = $vcnAppProperties->getCurrentMoodleVersion();
	
	$variables['is_logged_in_user'] = $GLOBALS['is_user_logged_in'];
	$variables['is_logged_in_user_text'] = ($variables['is_logged_in_user']) ? 'true' : 'false';
	$variables['vcn_notebook_item_count'] = $GLOBALS['vcn_notebook_item_count'];
	$variables['has_notebook_items'] = ($GLOBALS['vcn_notebook_item_count'] > 0) ? true : false;
	$variables['has_notebook_items_text'] = ($variables['has_notebook_items']) ? 'true' : 'false';
	
	$variables['is_provider_user'] = ($GLOBALS['user_provider_id'] > 0) ? true : false;
	$variables['is_provider_user_text'] = ($variables['is_provider_user']) ? 'true' : 'false';
	$variables['vcn_user_id'] = $GLOBALS['vcn_user_id'];
	$variables['d6_user_id'] = $GLOBALS['d6_uid'];
	$variables['d6_user_name'] = $GLOBALS['d6_name'];
	$variables['vcn_notebook_item_count'] = $GLOBALS['vcn_notebook_item_count'];
	$variables['logged_in_user_default_zipcode'] = $GLOBALS['logged_in_user_default_zipcode'];
	$variables['vcn_config_php_server_name'] = $GLOBALS['vcn_config_php_server_name'];

}

/**
 * Implementation of hook_preprocess_HOOK()
 */

function vcnheader_preprocess_vcnheader_provider_block(&$variables) {
  
  // Include vcnprovider.inc file
	module_load_include('inc', 'vcnprovider', '/includes/vcnprovider');
  
  $variables['vcn_base_path'] = base_path();
  $variables['is_user_provider'] = vcn_validate_provider_user(false);

  if ($variables['is_user_provider']) {
    $variables['left_link_string'] = vcn_header_left_links('provider_main');
  } else {
    $variables['left_link_string'] = vcn_header_left_links('provider_front');
  }
  
  $variables['right_link_string'] = vcn_header_left_links("provider_main_right");
  
  $variables['headerlinksfront'] = 'vcn-header-links-front';
  if (stristr($_SERVER['REQUEST_URI'], 'summary')) {
    $variables['headerlinksfront'] = 'vcn-header-links-front-dark';
  }
  $variables['headerlinksend'] = 'vcn-header-links-end';
  if (stristr($_SERVER['REQUEST_URI'], 'faq')) {
    $variables['headerlinksend'] = 'vcn-header-links-end-dark';
  }
  
  // get the VCN's app properties
  $vcnAppProperties = new vcnAppProperties();
  $variables['current_drupal_version'] = $vcnAppProperties->getCurrentDrupalVersion();
  $variables['current_moodle_version'] = $vcnAppProperties->getCurrentMoodleVersion();
  
  $variables['is_logged_in_user'] = $GLOBALS['is_user_logged_in'];
  $variables['is_logged_in_user_text'] = ($variables['is_logged_in_user']) ? 'true' : 'false';
  $variables['vcn_notebook_item_count'] = $GLOBALS['vcn_notebook_item_count'];
  $variables['has_notebook_items'] = ($GLOBALS['vcn_notebook_item_count'] > 0) ? true : false;
  $variables['has_notebook_items_text'] = ($variables['has_notebook_items']) ? 'true' : 'false';
  
  $variables['is_provider_user'] = ($GLOBALS['user_provider_id'] > 0) ? true : false;
  $variables['is_provider_user_text'] = ($variables['is_provider_user']) ? 'true' : 'false';
  $variables['vcn_user_id'] = $GLOBALS['vcn_user_id'];
  $variables['d6_user_id'] = $GLOBALS['d6_uid'];
  $variables['d6_user_name'] = $GLOBALS['d6_name'];
  $variables['vcn_notebook_item_count'] = $GLOBALS['vcn_notebook_item_count'];
  $variables['logged_in_user_default_zipcode'] = $GLOBALS['logged_in_user_default_zipcode'];
  $variables['vcn_config_php_server_name'] = $GLOBALS['vcn_config_php_server_name'];
  
}
